import fs from 'fs';
import path from 'path';

const publicDir = path.resolve('public');
const disclaimersDir = path.join(publicDir, 'disclaimers');
const localesDir = path.join(publicDir, 'locales');
const outputFile = path.join(publicDir, 'sw-assets.js');

// Base static assets always cached by the service worker
const baseAssets = [
  '/',
  '/index.html',
  '/favicon.ico',
  '/favicon.png',
  '/favicon.svg',
  '/favicon-96x96.png',
  '/apple-touch-icon.png',
  '/disclaimer.txt',
  '/placeholder.svg',
  '/web-app-manifest-192x192.png',
  '/web-app-manifest-512x512.png',
  '/site.webmanifest',
  '/robots.txt',
  '/sora-userscript.user.js',
];

function listFiles(dir, filter) {
  if (!fs.existsSync(dir)) return [];
  return fs
    .readdirSync(dir)
    .filter(filter)
    .sort()
    .map((file) => `/${path.relative(publicDir, dir)}/${file}`.replace(/\\/g, '/'));
}

const disclaimerAssets = listFiles(
  disclaimersDir,
  (file) => file.startsWith('disclaimer.') && file.endsWith('.txt'),
);
const localeAssets = listFiles(localesDir, (file) => file.endsWith('.json'));

const staticAssets = [...baseAssets, ...disclaimerAssets, ...localeAssets];

const fileContent = `// This file is auto-generated by scripts/generate-sw-assets.js\nexport const staticAssets = ${JSON.stringify(
  staticAssets,
  null,
  2,
)};\n`;

fs.writeFileSync(outputFile, fileContent);
